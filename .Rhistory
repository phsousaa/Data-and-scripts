uncount(value) %>%
ungroup()
View (dadosfinal)
levels (dadosfinal)
View(dadosfinal)
dadosfinal = dadosfinal %>%
mutate_if(is.character, as.factor)
str (dadosfinal)
moddadosfinal = multinom (Negação ~ regiao, data=dadosfinal)
tab_model(moddadosfinal)
dadosfinal$Negação = relevel(dadosfinal$Negação, ref = "preverbal")
moddadosfinal = multinom (Negação ~ regiao, data=dadosfinal)
tab_model(moddadosfinal)
moddadosfinal = multinom (Negação ~ regiao+pesquisa, data=dadosfinal)
tab_model(moddadosfinal)
moddadosfinal = multinom (Negação ~ pesquisa, data=dadosfinal)
tab_model(moddadosfinal)
moddadosfinal = multinom (Negação ~ regiao, data=dadosfinal)
tab_model(moddadosfinal)
roc2013 = countsToCases(as.data.frame (roc2013))
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#--------------------------------------------------------------------
# Rocha (2013)
VD = c ("Negação Pré-verbal", "Dupla Negação")
genero = c ("masculino", 'feminino')
roc2013 = data.matrix (rbind (
c (2434, 146),
c (2845, 178)
))
rownames (roc2013) = genero
colnames (roc2013) = VD
View (roc2013)
roc2013.t = t(roc2013)
barplot (roc2013.t,
beside = T,
legend = T,
cex.axis = 0.8,
col = c ('aquamarine2', "aliceblue"),
cex.names = 0.8,
ylim= c (0,1000),
args.legend = list (x='topleft',
cex = 0.8, bty = 'n'),
ylab = "Frequência de Uso")
roc2013 = as.data.frame.table (roc2013)
roc2013 = countsToCases(as.data.frame (roc2013))
source("C:/Users/pedro/OneDrive/pdf/TCC/Análise Estatística/Rscript 2.R")
2
2
2
# Libraries
library(ggplot2)
library(dplyr)
library (viridis)
library (hrbrthemes)
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
library(ggplot2)
require(maps)
install.packages ("maps")
library (maps)
# Plotting a basic world map
ggplot(data=maps::map_data("world"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic world map
ggplot(data=maps::map_data("world"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
maps = data (maps)
maps = data (map_data ('world'))
# Plotting a basic world map
ggplot(data= map_data("brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
maps = map_data ('brazil')
?map_data
map ('brazil')
map ('brasil')
map ('world')
map ('US')
?map
map ('world', region = 'brazil')
?map
map ('world', region = 'brazil', exact = T)
map ('world', region = 'brazil', interior = T)
map ('world', region = 'brazil', interior = T, orientation- 'latitude')
map ('world', region = 'brazil', interior = T, orientation = 'latitude')
install.packages ('mapproj')
library (mapproj)
map ('world', region = 'brazil', interior = T, orientation = 'latitude')
map ('world', region = 'brazil', interior = T, orientation = aes (x = 'latitude', y = 'longitude')
map ('world', region = 'brazil', interior = T, orientation = aes (x = 'latitude', y = 'longitude')
map ('world', region = 'brazil', interior = T, orientation = aes (x = 'latitude', y = 'longitude')
map ('world', region = 'brazil', interior = T, orientation = aes (x = 'latitude', y = 'longitude')
map ('world', region = 'brazil', interior = T, orientation = aes (x = 'latitude', y = 'longitude'))
map ('world', region = 'brazil', interior = T, fill = T, orientation =
aes (x = 'latitude', y = 'longitude'))
map ('world', region = 'brazil', interior = T, fill = T)
map ('world', region = 'brazil', interior = T, fill = 'regions')
map ('world', region = 'brazil', interior = T, fill = T)
map = map ('world', region = 'brazil', interior = T, fill = T)
# Plotting a basic world map
ggplot(data= map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
library(ggplot2)
library(maps)
# Plotting a basic map of Brazil
ggplot(data=maps::map_data("worldHires", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
# Plotting a basic map of Brazil
ggplot(data=maps::map_data("worldHires", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic map of Brazil
ggplot(data=maps::map_data("worldHires", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic map of Brazil
ggplot(data=map_data("worldHires", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic map of Brazil
ggplot(data=map_data("world", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic map of Brazil
ggplot(data=map_data("world", "Brazil"), aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a basic map of Brazil
ggplot(data=brazil_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void()
# Plotting a map of Brazil with state boundaries
brazil_map <- maps::map_data("state", region="Brazil")
# Plotting a map of Brazil with state boundaries
brazil_map <- maps:::map_data("state", region="Brazil")
library(maps)
# Plotting a map of Brazil with state boundaries
brazil_map <- maps:::map_data("state", region="Brazil")
library(ggplot2)
# Plotting a map of Brazil with state boundaries
brazil_map <- maps:::map_data("state", region="Brazil")
install.packages('mapdata')
library(mapdata)
# Plotting a map of Brazil with state boundaries
brazil_map <- maps:::map_data("state", region="Brazil")
ggplot(data=brazil_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_fixed(1.3) +
theme_void() +
labs(x = NULL, y = NULL) +
scale_x_continuous(limits = c(-75, -33)) +
scale_y_continuous(limits = c(-35, 12))
# Plotting a map of Brazil with state boundaries
brazil_map <- mapdata:::map_data("state", region="Brazil")
# Plotting a map of Brazil with state boundaries
brazil_map <- mapdata::map_data("state", region = "brazil")
# Plotting a map of Brazil with state boundaries
brazil_map <- mapdata:::map_data("state", region = "brazil")
brazil_map <- mapdata:::map_data("state", region = "brazil")
library(ggplot2)
library(maps)
# Plotting a map of Brazil with state boundaries
brazil_map <- map("state", region = "brazil", fill = TRUE)
library(ggplot2)
library(maps)
# Plotting a map of Brazil with state boundaries
brazil_map <- map("state", region = "brazil", fill = TRUE)
# Plotting a map of Brazil with state boundaries
brazil_map <- map("world", regions="Brazil", fill = TRUE)
ggplot() +
geom_polygon(data=brazil_map, aes(x=long, y=lat, group=group),
fill="white", color="black") +
coord_fixed(1.3) +
theme_void() +
labs(x = NULL, y = NULL) +
scale_x_continuous(limits = c(-75, -33)) +
scale_y_continuous(limits = c(-35, 12))
ggplot() +
geom_polygon(data=brazil_map, aes(x=long, y=lat, group=group),
fill="white", color="black") +
coord_fixed(1.3) +
theme_void() +
labs(x = NULL, y = NULL) +
scale_x_continuous(limits = c(-75, -33)) +
scale_y_continuous(limits = c(-35, 12))
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#ANÁLISE GERAL
VD = c ("Negação Pré-verbal", "Dupla Negação", "Negação Pós-verbal")
pesquisas = c ("Lopes da Silva, 2020", "Nunes, 2014", "Nascimento, 2014", "Rocha, 2013",
"Cavalcante, 2007", "Serra, 2018", "Reimann e Yacovenco, 2011",
"Rocha, 2012", "Reimann e Yacovenco, 2014")
dadostodos = data.matrix (rbind (
c (1819, 278, 7),
c (616, 214, 13),
c (1751, 478, 34),
c (5279, 324, 4),
c (1343, 568, 115),
c (1009, 133, 17),
c (721, 216, 42),
c (940, 117, 4),
c (1754, 478, 34)
))
rownames (dadostodos) = pesquisas
colnames (dadostodos) = VD
View (dadostodos)
dadostodos = as.data.frame.table (dadostodos)
dadostodos = countsToCases(as.data.frame (dadostodos))
names (dadostodos) = c ('pesquisas', 'VD')
dadostodos$pesquisas = factor (dadostodos$pesquisas, levels = c ("Lopes da Silva, 2020", "Nunes, 2014", "Nascimento, 2014", "Rocha, 2013",
"Cavalcante, 2007", "Serra, 2018", "Reimann e Yacovenco, 2011",
"Rocha, 2012", "Yacovenco e Nascimento, 2016", "Reimann e Yacovenco, 2014"))
head(dadostodos)
ggbarstats (x = VD, y =pesquisas, data=dadostodos,
bf.message = F,
xlab = "Pesquisas",
legend.title = "Negação")
# Libraries
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
ggbarstats (x = VD, y =pesquisas, data=dadostodos,
bf.message = F,
xlab = "Pesquisas",
legend.title = "Negação")
# Libraries
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#ANÁLISE GERAL
VD = c ("Negação Pré-verbal", "Dupla Negação", "Negação Pós-verbal")
pesquisas = c ("Lopes da Silva, 2020", "Nunes, 2014", "Nascimento, 2014", "Rocha, 2013",
"Cavalcante, 2007", "Serra, 2018", "Reimann e Yacovenco, 2011",
"Rocha, 2012", "Reimann e Yacovenco, 2014")
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#--------------------------------------------------------------------
#ANÁLISE GERAL
VD = c ("Negação Pré-verbal", "Dupla Negação", "Negação Pós-verbal")
pesquisas = c ("Lopes da Silva, 2020", "Nunes, 2014", "Nascimento, 2014", "Rocha, 2013",
"Cavalcante, 2007", "Serra, 2018", "Reimann e Yacovenco, 2011",
"Rocha, 2012", "Reimann e Yacovenco, 2014")
dadostodos = data.matrix (rbind (
c (1819, 278, 7),
c (616, 214, 13),
c (1751, 478, 34),
c (5279, 324, 4),
c (1343, 568, 115),
c (1009, 133, 17),
c (721, 216, 42),
c (940, 117, 4),
c (1754, 478, 34)
))
rownames (dadostodos) = pesquisas
colnames (dadostodos) = VD
View (dadostodos)
dadostodos = as.data.frame.table (dadostodos)
dadostodos = countsToCases(as.data.frame (dadostodos))
names (dadostodos) = c ('pesquisas', 'VD')
dadostodos$pesquisas = factor (dadostodos$pesquisas, levels = c ("Lopes da Silva, 2020", "Nunes, 2014", "Nascimento, 2014", "Rocha, 2013",
"Cavalcante, 2007", "Serra, 2018", "Reimann e Yacovenco, 2011",
"Rocha, 2012", "Yacovenco e Nascimento, 2016", "Reimann e Yacovenco, 2014"))
head(dadostodos)
ggbarstats (x = VD, y =pesquisas, data=dadostodos,
bf.message = F,
xlab = "Pesquisas",
legend.title = "Negação")
?plot
plot (data=cav2007)
plot (data=cav2007, x=genero, y=VD)
plot (data=dados, x=genero, y=VD)
alfa = c (0,3,5,9,12)
beta = c (8,9,6,4,2)
data.frame = data.frame(alfa, beta)
plot (data.frame)
rm = c (alfa, beta)
data.frame = data.frame(VD, VI)
VD = c (0,3,5,9,12)
VI = c (8,9,6,4,2)
data.frame = data.frame(VD, VI)
VD = c (0,3,5,9,12,23,56,89,45,27,56,32)
VI = c (8,9,6,4,2,9,81,26,25,35,45, 82)
data.frame = data.frame(VD, VI)
plot (data.frame)
data.frame = data.frame(VI, VD)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Independente")
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente")
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.5,
pch = 15)
?cex.axis
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0,
pch = 15)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0
pch = 15)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 2.0,
pch = 15)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15)
?plot
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'b')
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'a')
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'b')
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'c')
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p')
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 0.5)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.5)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.2)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.2, col = 2.0)
plot (data.frame, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100), cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.2, col = 3.0)
plot (x= VI, y=VD, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100),
cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.2, col = 3.0)
plot (x= VI, y=VD, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100),
cex.lab = 1.0, cex.axis = 1.0, bty = 'n',
pch = 15, type = 'p', cex = 1.2, col = 3.0)
plot (x= VI, y=VD, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100),
cex.lab = 1.0, cex.axis = 1.0, bty = 'n',
pch = 15, type = 'p', cex = 1.2, col = 3.0)
plot (x= VI, y=VD, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100),
cex.lab = 1.0, cex.axis = 1.0,
pch = 15, type = 'p', cex = 1.2, col = 3.0)
plot (x= VI, y=VD, main = "Relação entre VI e VD", ylab = "Variável Dependente",
xlab = "Variável Independente", xlim = c (0, 100), ylim = c (0, 100),
cex.lab = 1.0, cex.axis = 1.0,  bty = 'n',
pch = 15, type = 'p', cex = 1.2, col = 3.0)
# Vamos visualizar o que tem nessa pasta 'dados_mru'
print( dir() )
# Importar dados
dados = read.table('dados_t_vs_s_mru_amostragem01.txt')
# Analise preliminar dos dados
print( dim(dados) )
print( head(dados) )
print( tail(dados) )
plot( dados, col='red', cex=2, xlab='t (s)', ylab=' s (m)', main='tempo vs posição' )
dados1 = read.table ("dados_t_vs_s_mru_amostragem01.txt")
setwd("C:/Users/pedro/OneDrive/Desktop/labfis2/dados_mru")
dados1 = read.table ("dados_t_vs_s_mru_amostragem01.txt")
print (dim(dados1))
print (dados1)
View(dados1)
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,10), cex.axis = 1.0,
cex.labs = 1.0)
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,10), cex.axis = 1.0,
cex.lab = 1.0)
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,10), cex.axis = 1.0,
cex.lab = 1.0)
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,10), cex.axis = 1.0,
cex.lab = 1.0, pch = 15)
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,10), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n')
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n')
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "espaço/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n', type = 'b')
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "posição/metro", main = "Gráfico de pontos", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n', type = 'b')
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "posição/metro", main = "Gráfico de pontos e linhas", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n', type = 'b')
plot (dados1, col= 'blue', cex= 2, xlab = 'tempo/segundo',
ylab = "posição/metro", main = "Gráfico de pontos e linhas", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n', type = 'b')
plot (dados1, col= 'blue', cex= 1, xlab = 'tempo/segundo',
ylab = "posição/metro", main = "Gráfico de pontos e linhas", ylim =c (0,10), xlim = c (0,12), cex.axis = 1.0,
cex.lab = 1.0, pch = 15, bty = 'n', type = 'b')
barplot (lopes2020fe.t,
beside = T,
legend = T,
cex.axis = 0.8,
col = c ('aquamarine2', "aliceblue"),
cex.names = 0.8,
ylim= c (0,1000),
args.legend = list (x='topleft',
cex = 0.8, bty = 'n'),
ylab = "Frequência de Uso")
library (ggstatsplot)
ggbarstats(data=lopes2020fe.t)
ggbarstats(data=lopes2020fe.t,
x= VD,
y = faixa.etaria)
ggbarstats(data=lopes2020fe,
x= VD,
y = faixa.etaria)
barplot (cav2007.t,
beside = T,
legend = T,
cex.axis = 0.8,
col = c ('aquamarine2', "aliceblue"),
cex.names = 0.8,
ylim= c (0,1000),
args.legend = list (x='topleft',
cex = 0.8, bty = 'n'),
ylab = "Frequência de Uso")
ggbarstats (x = VD, y =genero, data=cav2007.2,
bf.message = F,
xlab = "Gênero",
legend.title = "Negação")
# Libraries
library (tidyverse)
barplot (cav2007.2.t,
beside = T,
legend = T,
cex.axis = 0.8,
col = c ('aquamarine2', "aliceblue"),
cex.names = 0.8,
ylim= c (0,1000),
args.legend = list (x='topleft',
cex = 0.8, bty = 'n'),
ylab = "Frequência de Uso")
summary (modelo.1)
ggbarstats (x = VD, y =genero, data=cav2007.2,
bf.message = F,
xlab = "Gênero",
legend.title = "Negação")
library (ggstatsplot)
ggbarstats (x = VD, y =genero, data=cav2007.2,
bf.message = F,
xlab = "Gênero",
legend.title = "Negação")
tab_model (modelo, transform = NULL)
# Libraries
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
tab_model (modelo, transform = NULL)
library(htmlwidgets)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("webshot")
library(htmlwidgets)
library(webshot)
x= tab_model (modelo, transform = NULL)
# Libraries
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
x= tab_model (modelo, transform = NULL)
saveWidget(x, "temp.html")
webshot("temp.html", "temp.png")
rm (x)
# Libraries
library (tidyverse)
library (sjPlot)
library (nnet)
library (ggstatsplot)
tab_model (modelo2, transform = NULL)
